syntax = "proto3";

package tokenfactory.tokenfactory;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "tokenfactory/tokenfactory/params.proto";
import "tokenfactory/tokenfactory/denom.proto";

option go_package = "tokenfactory/x/tokenfactory/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc CreateDenom  (MsgCreateDenom ) returns (MsgCreateDenomResponse );
  rpc UpdateDenom  (MsgUpdateDenom ) returns (MsgUpdateDenomResponse );
  rpc DeleteDenom  (MsgDeleteDenom ) returns (MsgDeleteDenomResponse );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                                   "authority";
  option           (amino.name) = "tokenfactory/x/tokenfactory/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateDenom {
  option (cosmos.msg.v1.signer) = "creator";
  string creator            = 1;
  string denom              = 2;
  string description        = 3;
  string ticker             = 4;
  int32  precision          = 5;
  string url                = 6;
  int32  maxSupply          = 7;
  bool   canChangeMaxSupply = 8;
}

message MsgCreateDenomResponse {}

message MsgUpdateDenom {
  option (cosmos.msg.v1.signer) = "creator";
  string creator            = 1;
  string denom              = 2;
  string description        = 3;
  string url                = 4;
  int32  maxSupply          = 5;
  bool   canChangeMaxSupply = 6;
}

message MsgUpdateDenomResponse {}

message MsgDeleteDenom {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string denom   = 2;
}

message MsgDeleteDenomResponse {}

